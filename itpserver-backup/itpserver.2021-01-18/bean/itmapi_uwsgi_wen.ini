
# uwsgi --http :8000  --ini itmapi_uwsgi.ini
# uwsgi --master --https 0.0.0.0:443,foobar.crt,foobar.key,HIGH --chdir /home/share/bean/ --module bean.wsgi

[uwsgi]

# https = 0.0.0.0:9443,/opt/skyguard/itpserver/cert/server.pem,/opt/skyguard/itpserver/cert/server.key,HIGH
# 2020-12-16 test deploy
https = 0.0.0.0:9443,/opt/skyguard/itpserver/cert/server.pem,/opt/skyguard/itpserver/cert/server.key,HIGH
# http-to = /tmp/uwsgi.sock

# 路径
wsgi-file = bean/wsgi.py

# auto load py
# py-autoreload = 1

# static map
static-map=/static=/static

# 重启时间
# harakiri = 10

# 主进程
master = true

# 4个进程/workers
processes = 4

# 两个核心
# threads = 1

# 开启线程
enable-threads = false

# 单个进程最大请求数
max-requests = 5000

# 解包缓冲区大小
buffer-size = 65536

# 平滑重启时间
reload-mercy = 5
worker-reload-mercy = 5

# 状态监听地址
stats = 127.0.0.1:5000

# master进程位置，用于停止和重新加载
pidfile = /var/run/itpserver.pid

# 退出后自动清理socket pid文件，停止后将无法重启
vacuum = true

# 日志分块大小
# log-maxsize = 50000000

# 不记录请求日志，只记录错误及内部消息
disable-logging = true

# logto
# logto = /opt/skyguard/itpserver/logs/uwsgi.log
# 2020-12-16 test deploy
# logto = /opt/skyguard/itpserver/bean/logs/uwsgi.log
logto = /var/log/itp/itpserver/logs/uwsgi.log
# modify log saitmapi_uwsgi.inive dir

# 设置监听对象
# touch-logreopen = /opt/skyguard/itpserver/logs/.touchforlogrotat
# 2020-12-16 test deploy
touch-logreopen = /opt/skyguard/itpserver/bean/logs/.touchforlogrotat
